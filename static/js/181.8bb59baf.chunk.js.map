{"version":3,"file":"static/js/181.8bb59baf.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","pages/Register/Register.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { BiShowAlt, BiHide } from 'react-icons/bi';\nimport { FaUserAlt } from 'react-icons/fa';\nimport {\n  MdOutlineMailOutline,\n  MdVpnKey,\n  MdOutlineVpnKey,\n} from 'react-icons/md';\n\nexport const EmailIcon = styled(MdOutlineMailOutline)`\n  width: 27px;\n  height: 27px;\n  position: absolute;\n  left: 10px;\n  top: 36%;\n  transform: translateY(-50%);\n  background: transparent;\n  border: none;\n  z-index: 100;\n  fill: darkslategrey;\n`;\n\nexport const PassIcon = styled(MdVpnKey)`\n  width: 25px;\n  height: 25px;\n  position: absolute;\n  left: 10px;\n  top: 33%;\n  transform: translateY(-50%);\n  background: transparent;\n  border: none;\n  z-index: 100;\n  fill: darkslategrey;\n`;\n\nexport const PassItemIcon = styled(MdOutlineVpnKey)`\n  width: 25px;\n  height: 25px;\n  position: absolute;\n  left: 10px;\n  top: 33%;\n  transform: translateY(-50%);\n  background: transparent;\n  border: none;\n  z-index: 100;\n  fill: darkslategrey;\n`;\n\nexport const UserIcon = styled(FaUserAlt)`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  left: 10px;\n  top: 36%;\n  transform: translateY(-50%);\n  background: transparent;\n  border: none;\n  z-index: 100;\n  fill: darkslategrey;\n`;\n\nexport const EyeIcon = styled(BiShowAlt)`\n  width: 25px;\n  height: 25px;\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n    fill: darkslategrey;\n  }\n`;\nexport const EyeOffIcon = styled(BiHide)`\n  width: 25px;\n  height: 25px;\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n    fill: darkslategrey;\n  }\n`;\n\nexport const FormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n`;\n\nexport const InputContainer = styled.div`\n  position: relative;\n`;\n\nexport const FormInput = styled.input`\n  text-indent: 30px;\n  width: 300px;\n  padding: 10px;\n  margin-bottom: 20px;\n  font-size: 16px;\n  border: none;\n  border: 2px solid darkslategrey;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    outline 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    transform: scale(1.01);\n    color: darkslategrey;\n    outline: 2px solid darkslategrey;\n  }\n`;\n\nexport const FormButton = styled.button`\n  width: 100%;\n  cursor: pointer;\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-transform: uppercase;\n  text-decoration: none;\n  color: white;\n  background: linear-gradient(#1b1b1b, #111);\n  font-weight: 500;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n    color: darkslategrey;\n  }\n`;\n\nexport const ShowPasswordContainer = styled.div`\n  position: relative;\n`;\n\nexport const ShowPasswordButton = styled.div`\n  position: absolute;\n  right: 10px;\n  top: 38%;\n  transform: translateY(-50%);\n  background: transparent;\n  border: none;\n  cursor: pointer;\n`;\n","import Box from 'components/Box';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from '../../redux/auth/operations';\nimport {\n  FormContainer,\n  FormInput,\n  FormButton,\n  ShowPasswordContainer,\n  ShowPasswordButton,\n  EyeIcon,\n  EyeOffIcon,\n  UserIcon,\n  EmailIcon,\n  PassIcon,\n  PassItemIcon,\n  InputContainer,\n} from './RegisterForm.styled';\n\n//  if (name.length < 3 || username.length > 15) {\n//    Notify.failure('Name must be at least min 3 and max 15 characters long');\n//    return;\n//  }\n\n//  if (password.length < 8) {\n//    Notify.failure('Password must be at least 8 characters long');\n//    return;\n//  }\n//  if (!/\\d/.test(password)) {\n//    Notify.failure('Password must contain at least one digit');\n//    return;\n//  }\n//  if (!/[a-zA-Z]/.test(password)) {\n//    Notify.failure('Password must contain at least one letter');\n//    return;\n//  }\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (confirmPassword !== password) {\n      Notify.failure('Passwords are different, check them and try again...');\n      return;\n    }\n    dispatch(register({ name, email, password }));\n    Notify.success(`Hello, ${name}!`);\n    resetForm(event);\n  };\n\n  const resetForm = event => {\n    setName('');\n    setEmail('');\n    setPassword('');\n    setConfirmPassword('');\n    event.target.reset();\n  };\n\n  return (\n    <FormContainer>\n      <form onSubmit={handleSubmit}>\n        <Box display=\"flex\" flexDirection=\"column\">\n          <InputContainer>\n            <UserIcon />\n            <FormInput\n              type=\"text\"\n              placeholder=\"name\"\n              value={name}\n              onChange={event => setName(event.target.value)}\n              required\n            />\n          </InputContainer>\n          <InputContainer>\n            <EmailIcon />\n            <FormInput\n              type=\"email\"\n              placeholder=\"Email\"\n              value={email}\n              onChange={event => setEmail(event.target.value)}\n              required\n            />\n          </InputContainer>\n        </Box>\n        <ShowPasswordContainer>\n          <InputContainer>\n            <PassItemIcon />\n            <FormInput\n              type={showPassword ? 'text' : 'password'}\n              placeholder=\"Password\"\n              value={password}\n              onChange={event => setPassword(event.target.value)}\n              required\n            />\n          </InputContainer>\n          <ShowPasswordButton onClick={() => setShowPassword(!showPassword)}>\n            {showPassword ? <EyeIcon /> : <EyeOffIcon />}\n          </ShowPasswordButton>\n        </ShowPasswordContainer>\n        <ShowPasswordContainer>\n          <PassIcon />\n          <FormInput\n            type={showPassword ? 'text' : 'password'}\n            placeholder=\"Confirm Password\"\n            value={confirmPassword}\n            onChange={event => setConfirmPassword(event.target.value)}\n            required\n          />\n          <ShowPasswordButton onClick={() => setShowPassword(!showPassword)}>\n            {showPassword ? <EyeIcon /> : <EyeOffIcon />}\n          </ShowPasswordButton>\n        </ShowPasswordContainer>\n        <FormButton type=\"submit\">Register</FormButton>\n      </form>\n    </FormContainer>\n  );\n};\n\nexport default RegisterForm;\n","import RegisterForm from 'components/RegisterForm';\n\nconst Register = () => {\n  return (\n    <div>\n      <RegisterForm />\n    </div>\n  );\n};\n\nexport default Register;\n"],"names":["EmailIcon","styled","MdOutlineMailOutline","PassIcon","MdVpnKey","PassItemIcon","MdOutlineVpnKey","UserIcon","FaUserAlt","EyeIcon","BiShowAlt","EyeOffIcon","BiHide","FormContainer","InputContainer","FormInput","FormButton","ShowPasswordContainer","ShowPasswordButton","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","showPassword","setShowPassword","resetForm","event","target","reset","onSubmit","preventDefault","register","Notify","Box","display","flexDirection","type","placeholder","value","onChange","required","onClick"],"sourceRoot":""}