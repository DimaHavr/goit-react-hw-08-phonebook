{"version":3,"file":"static/js/181.199fb82f.chunk.js","mappings":"+RAgBaA,GAAWC,EAAAA,EAAAA,IAAOC,EAAAA,IAAPD,CAAH,0MAYRE,GAAUF,EAAAA,EAAAA,IAAOG,EAAAA,IAAPH,CAAH,2IASPI,GAAaJ,EAAAA,EAAAA,IAAOK,EAAAA,IAAPL,CAAH,2IAUVM,EAAgBN,EAAAA,GAAAA,IAAH,+GAObO,EAAiBP,EAAAA,GAAAA,IAAH,+CAIdQ,EAAYR,EAAAA,GAAAA,MAAH,kcAoBTS,EAAaT,EAAAA,GAAAA,OAAH,qYAkBVU,EAAwBV,EAAAA,GAAAA,IAAH,+CAIrBW,EAAqBX,EAAAA,GAAAA,IAAH,6K,SCD/B,EArFqB,WACnB,OAAgCY,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACA,GAA8CN,EAAAA,EAAAA,UAAS,IAAvD,eAAOO,EAAP,KAAwBC,EAAxB,KACA,GAAwCR,EAAAA,EAAAA,WAAS,GAAjD,eAAOS,EAAP,KAAqBC,EAArB,KAgBMC,EAAY,SAAAC,GAChBV,EAAY,IACZE,EAAS,IACTE,EAAY,IACZE,EAAmB,IACnBI,EAAMC,OAAOC,OACd,EAED,OACE,SAACpB,EAAD,WACE,kBAAMqB,SAxBW,SAAAH,GACnBA,EAAMI,iBACFT,IAAoBF,GAKxBY,QAAQC,IAAI,6BAA8BjB,GAC1CgB,QAAQC,IAAI,0BAA2Bf,GAEvCgB,EAAAA,OAAAA,QAAA,iBAAyBlB,EAAzB,MACAU,EAAUC,IARRO,EAAAA,OAAAA,QAAe,uDASlB,EAYG,WACE,UAACC,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,SAAlC,WACE,UAAC3B,EAAD,YACE,SAACR,EAAD,KACA,SAACS,EAAD,CACE2B,KAAK,OACLC,YAAY,WACZC,MAAOxB,EACPyB,SAAU,SAAAd,GAAK,OAAIV,EAAYU,EAAMC,OAAOY,MAA7B,EACfE,UAAQ,QAGZ,SAAChC,EAAD,WACE,SAACC,EAAD,CACE2B,KAAK,QACLC,YAAY,QACZC,MAAOtB,EACPuB,SAAU,SAAAd,GAAK,OAAIR,EAASQ,EAAMC,OAAOY,MAA1B,EACfE,UAAQ,UAId,UAAC7B,EAAD,YACE,SAACH,EAAD,WACE,SAACC,EAAD,CACE2B,KAAMd,EAAe,OAAS,WAC9Be,YAAY,WACZC,MAAOpB,EACPqB,SAAU,SAAAd,GAAK,OAAIN,EAAYM,EAAMC,OAAOY,MAA7B,EACfE,UAAQ,OAGZ,SAAC5B,EAAD,CAAoB6B,QAAS,kBAAMlB,GAAiBD,EAAvB,EAA7B,SACGA,GAAe,SAACjB,EAAD,KAAiB,SAACF,EAAD,UAGrC,UAACQ,EAAD,YACE,SAACF,EAAD,CACE2B,KAAMd,EAAe,OAAS,WAC9Be,YAAY,mBACZC,MAAOlB,EACPmB,SAAU,SAAAd,GAAK,OAAIJ,EAAmBI,EAAMC,OAAOY,MAApC,EACfE,UAAQ,KAEV,SAAC5B,EAAD,CAAoB6B,QAAS,kBAAMlB,GAAiBD,EAAvB,EAA7B,SACGA,GAAe,SAACjB,EAAD,KAAiB,SAACF,EAAD,UAGrC,SAACO,EAAD,CAAY0B,KAAK,SAAjB,0BAIP,ECvFD,EARiB,WACf,OACE,0BACE,SAAC,EAAD,KAGL,C","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","pages/Register/Register.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { BiShowAlt, BiHide } from 'react-icons/bi';\nimport { FaUserAlt } from 'react-icons/fa';\n\n// export const Icon = styled(BiShowAlt)`\n//   width: 20px;\n//   height: 20px;\n//   position: absolute;\n//   left: 10px;\n//   top: 50%;\n//   transform: translateY(-50%);\n//   background: transparent;\n//   border: none;\n//   z-index: 100;\n// `;\n\nexport const UserIcon = styled(FaUserAlt)`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  left: 10px;\n  top: 36%;\n  transform: translateY(-50%);\n  background: transparent;\n  border: none;\n  z-index: 100;\n`;\n\nexport const EyeIcon = styled(BiShowAlt)`\n  width: 25px;\n  height: 25px;\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n    color: orangered;\n  }\n`;\nexport const EyeOffIcon = styled(BiHide)`\n  width: 25px;\n  height: 25px;\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n    color: orangered;\n  }\n`;\n\nexport const FormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n`;\n\nexport const InputContainer = styled.div`\n  position: relative;\n`;\n\nexport const FormInput = styled.input`\n  text-indent: 30px;\n  width: 300px;\n  padding: 10px;\n  margin-bottom: 20px;\n  font-size: 16px;\n  border: none;\n  border: 2px solid lightgray;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    transform: scale(1.01);\n    color: orangered;\n    border-color: orangered;\n  }\n`;\n\nexport const FormButton = styled.button`\n  width: 100%;\n  cursor: pointer;\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-transform: uppercase;\n  text-decoration: none;\n  color: white;\n  background: linear-gradient(#1b1b1b, #111);\n  font-weight: 500;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n    color: orangered;\n  }\n`;\n\nexport const ShowPasswordContainer = styled.div`\n  position: relative;\n`;\n\nexport const ShowPasswordButton = styled.div`\n  position: absolute;\n  right: 10px;\n  top: 38%;\n  transform: translateY(-50%);\n  background: transparent;\n  border: none;\n  cursor: pointer;\n`;\n","import Box from 'components/Box';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { useState } from 'react';\nimport {\n  FormContainer,\n  FormInput,\n  FormButton,\n  ShowPasswordContainer,\n  ShowPasswordButton,\n  EyeIcon,\n  EyeOffIcon,\n  UserIcon,\n  InputContainer,\n} from './RegisterForm.styled';\nconst RegisterForm = () => {\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (confirmPassword !== password) {\n      Notify.failure('Passwords are different, check them and try again...');\n      return;\n    }\n\n    console.log('Register Form - Username: ', username);\n    console.log('Register Form - Email: ', email);\n\n    Notify.success(`Hello, ${username}!`);\n    resetForm(event);\n  };\n\n  const resetForm = event => {\n    setUsername('');\n    setEmail('');\n    setPassword('');\n    setConfirmPassword('');\n    event.target.reset();\n  };\n\n  return (\n    <FormContainer>\n      <form onSubmit={handleSubmit}>\n        <Box display=\"flex\" flexDirection=\"column\">\n          <InputContainer>\n            <UserIcon />\n            <FormInput\n              type=\"text\"\n              placeholder=\"Username\"\n              value={username}\n              onChange={event => setUsername(event.target.value)}\n              required\n            />\n          </InputContainer>\n          <InputContainer>\n            <FormInput\n              type=\"email\"\n              placeholder=\"Email\"\n              value={email}\n              onChange={event => setEmail(event.target.value)}\n              required\n            />\n          </InputContainer>\n        </Box>\n        <ShowPasswordContainer>\n          <InputContainer>\n            <FormInput\n              type={showPassword ? 'text' : 'password'}\n              placeholder=\"Password\"\n              value={password}\n              onChange={event => setPassword(event.target.value)}\n              required\n            />\n          </InputContainer>\n          <ShowPasswordButton onClick={() => setShowPassword(!showPassword)}>\n            {showPassword ? <EyeOffIcon /> : <EyeIcon />}\n          </ShowPasswordButton>\n        </ShowPasswordContainer>\n        <ShowPasswordContainer>\n          <FormInput\n            type={showPassword ? 'text' : 'password'}\n            placeholder=\"Confirm Password\"\n            value={confirmPassword}\n            onChange={event => setConfirmPassword(event.target.value)}\n            required\n          />\n          <ShowPasswordButton onClick={() => setShowPassword(!showPassword)}>\n            {showPassword ? <EyeOffIcon /> : <EyeIcon />}\n          </ShowPasswordButton>\n        </ShowPasswordContainer>\n        <FormButton type=\"submit\">Register</FormButton>\n      </form>\n    </FormContainer>\n  );\n};\n\nexport default RegisterForm;\n","import RegisterForm from 'components/RegisterForm';\n\nconst Register = () => {\n  return (\n    <div>\n      <RegisterForm />\n    </div>\n  );\n};\n\nexport default Register;\n"],"names":["UserIcon","styled","FaUserAlt","EyeIcon","BiShowAlt","EyeOffIcon","BiHide","FormContainer","InputContainer","FormInput","FormButton","ShowPasswordContainer","ShowPasswordButton","useState","username","setUsername","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","showPassword","setShowPassword","resetForm","event","target","reset","onSubmit","preventDefault","console","log","Notify","Box","display","flexDirection","type","placeholder","value","onChange","required","onClick"],"sourceRoot":""}