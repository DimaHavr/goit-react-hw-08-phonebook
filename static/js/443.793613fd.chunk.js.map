{"version":3,"file":"static/js/443.793613fd.chunk.js","mappings":"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","sources":["pages/Contacts/Contacts.styled.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactListItem/ContactListItem.styled.js","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/ContactFilter/ContactFilter.styled.js","components/ContactFilter/ContactFilter.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContactsContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const SubTitle = styled.h2`\n  font-weight: bold;\n  font-size: 25px;\n  text-transform: uppercase;\n  text-align: left;\n  color: #fff;\n`;\n\nexport const GlitchWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  background-color: rgba(33, 33, 33, 0);\n`;\n\nexport const Glitch = styled.h1`\n  position: relative;\n  font-size: 56px;\n  font-weight: 700;\n  line-height: 1.2;\n  color: #fff;\n  letter-spacing: 5px;\n  text-transform: uppercase;\n  z-index: 1;\n\n  &:before,\n  &:after {\n    display: block;\n    content: attr(data-glitch);\n    position: absolute;\n    top: 0;\n    left: 0;\n    opacity: 0.8;\n    animation: glitch-color 3s ease-in-out both infinite;\n  }\n\n  &:before {\n    color: #000000;\n    z-index: -1;\n  }\n\n  &:after {\n    color: darkslategrey;\n    z-index: -2;\n  }\n  @media screen and (max-width: 767px) {\n    font-size: 36px;\n  }\n`;\n\nexport const Keyframes = styled.style`\n  @keyframes glitch-color {\n    0% {\n      transform: translate(0);\n    }\n\n    20% {\n      transform: translate(-3px, 3px);\n    }\n\n    40% {\n      transform: translate(-3px, -3px);\n    }\n\n    60% {\n      transform: translate(3px, 3px);\n    }\n\n    80% {\n      transform: translate(3px, -3px);\n    }\n\n    to {\n      transform: translate(0);\n    }\n  }\n`;\n","export const selectLoading = state => state.contacts.loading;\n\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectAllContacts = state => state.contacts.contacts;\n","import styled from '@emotion/styled';\nimport { BsFillTelephoneFill } from 'react-icons/bs';\nimport { FaUserAlt } from 'react-icons/fa';\n\nexport const PhoneIcon = styled(BsFillTelephoneFill)`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  left: 10px;\n  top: 50%;\n  transform: translateY(-50%);\n  background: transparent;\n  border: none;\n  z-index: 100;\n  fill: darkslategrey;\n`;\n\nexport const UserIcon = styled(FaUserAlt)`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  left: 10px;\n  top: 50%;\n  transform: translateY(-50%);\n  background: transparent;\n  border: none;\n  z-index: 100;\n  fill: darkslategrey;\n`;\n\nexport const FormBox = styled.form`\n  display: flex;\n  align-items: stretch;\n  gap: 10px;\n  padding: 10px;\n\n  @media screen and (max-width: 767px) {\n    flex-direction: column;\n    align-items: center;\n    gap: 20px;\n  }\n`;\n\nexport const InputContainer = styled.div`\n  position: relative;\n`;\n\nexport const FormInput = styled.input`\n  text-indent: 30px;\n  width: 280px;\n  padding: 10px;\n  font-size: 16px;\n  border: none;\n  border: 2px solid #000;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    outline 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    transform: scale(1.01);\n    color: #000;\n    outline: 1px solid #000;\n    border-radius: 5px;\n  }\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-transform: uppercase;\n  text-decoration: none;\n  color: white;\n  background: linear-gradient(#1b1b1b, #111);\n  font-weight: 500;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n    color: darkslategrey;\n  }\n  @keyframes btn-animation {\n    0% {\n      transform: scale(1.05);\n    }\n    20% {\n      transform: scale(1.1);\n    }\n    100% {\n      transform: scale(1.13);\n    }\n  }\n  :active {\n    animation: btn-animation 1s ease-out;\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { addContact } from '../../redux/contacts/operations';\nimport { selectAllContacts } from '../../redux/contacts/selectors';\nimport {\n  FormBox,\n  FormInput,\n  Button,\n  PhoneIcon,\n  UserIcon,\n  InputContainer,\n} from './ContactForm.styled';\nimport Box from '../Box';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectAllContacts);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const onChangeInput = event => {\n    const { name, value } = event.target;\n    if (name === 'name') {\n      setName(value);\n    } else {\n      setNumber(value);\n    }\n  };\n\n  const onSubmitForm = event => {\n    event.preventDefault();\n\n    if (\n      contacts\n        .map(({ name }) => name.toLocaleLowerCase())\n        .some(item => item === name.toLocaleLowerCase())\n    ) {\n      setName('');\n      Notify.failure(`${name} is already in contacts!`);\n    } else {\n      dispatch(addContact({ name, number }));\n      resetForm(event);\n      Notify.success(`${name} is added in contacts!`);\n    }\n  };\n\n  const resetForm = event => {\n    setName('');\n    setNumber('');\n    event.target.reset();\n  };\n\n  return (\n    <Box\n      display=\"flex\"\n      justifyContent=\"center\"\n      flexDirection=\"column\"\n      gap=\"20px\"\n      marginBottom=\"10px\"\n    >\n      <FormBox onSubmit={onSubmitForm}>\n        <InputContainer>\n          <UserIcon />\n          <FormInput\n            value={name}\n            placeholder=\"Name\"\n            type=\"text\"\n            name=\"name\"\n            maxLength=\"20\"\n            required\n            onChange={onChangeInput}\n          />\n        </InputContainer>\n        <InputContainer>\n          <PhoneIcon />\n          <FormInput\n            value={number}\n            placeholder=\"Phone number\"\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            maxLength=\"15\"\n            required\n            onChange={onChangeInput}\n          />\n        </InputContainer>\n        <Button type=\"submit\">Add Contact</Button>\n      </FormBox>\n    </Box>\n  );\n};\n\nexport default ContactForm;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  padding: 20px;\n  display: flex;\n  flex-wrap: wrap;\n  flex: 1 1 1;\n  justify-content: center;\n  gap: 25px;\n  list-style-type: none;\n  @media screen and (max-width: 767px) {\n    flex-direction: column;\n    align-items: center;\n  }\n  @media screen and (min-width: 768px) {\n    flex-wrap: wrap;\n    flex: 1 1 1;\n  }\n`;\n","import styled from '@emotion/styled';\nimport { AiFillDelete } from 'react-icons/ai';\n\nexport const DeleteIcon = styled(AiFillDelete)`\n  width: 25px;\n  height: 25px;\n  fill: #fff;\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n    fill: red;\n  }\n  @keyframes btn-animation {\n    0% {\n      transform: scale(1.05);\n    }\n    20% {\n      transform: scale(1.1);\n    }\n    100% {\n      transform: scale(1.13);\n    }\n  }\n  :active {\n    animation: btn-animation 1s ease-out;\n  }\n`;\n\nexport const Item = styled.li`\n  width: 270px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 5px;\n  background: rgba(255, 255, 255, 0.15);\n  border: 1px solid rgba(255, 255, 255, 0.075);\n  backdrop-filter: blur(20px);\n`;\nexport const Text = styled.p`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  align-items: flex-start;\n  font-weight: bold;\n  font-size: 15px;\n  text-transform: uppercase;\n  text-align: center;\n  padding: 5px;\n`;\nexport const TextItem = styled.span`\n  color: #fff;\n`;\n\nexport const Button = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n`;\n","import { useDispatch } from 'react-redux';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport {\n  Item,\n  Button,\n  Text,\n  TextItem,\n  DeleteIcon,\n} from './ContactListItem.styled';\n\nconst ContactListItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <Item>\n      <Text>\n        {name}: <TextItem>{number}</TextItem>\n      </Text>\n      <Button\n        onClick={() => {\n          Notify.info('Сontact deleted!');\n          return dispatch(deleteContact(id));\n        }}\n        type=\"button\"\n      >\n        <DeleteIcon />\n      </Button>\n    </Item>\n  );\n};\n\nexport default ContactListItem;\n","import { useSelector } from 'react-redux';\nimport { getFilter } from '../../redux/filter/filterSlice';\nimport { selectAllContacts } from '../../redux/contacts/selectors';\nimport { List } from './ContactList.styled';\nimport ContactListItem from 'components/ContactListItem/ContactListItem';\n\nconst ContactList = () => {\n  const filter = useSelector(getFilter);\n  const contacts = useSelector(selectAllContacts);\n\n  const getAddedContacts = () => {\n    const toLowerCaseFilter = filter.toLocaleLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(toLowerCaseFilter)\n    );\n  };\n\n  return (\n    <List>\n      {getAddedContacts().map(({ name, number, id }) => {\n        return <ContactListItem key={id} name={name} number={number} id={id} />;\n      })}\n    </List>\n  );\n};\n\nexport default ContactList;\n","import styled from '@emotion/styled';\nimport { BsFillFilterSquareFill } from 'react-icons/bs';\nexport const FilterIcon = styled(BsFillFilterSquareFill)`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  left: 10px;\n  fill: #00000042;\n  top: 33%;\n  transform: translateY(-50%);\n  background: transparent;\n  border: none;\n  z-index: 100;\n  fill: darkslategrey;\n`;\n\nexport const FilterBox = styled.div`\n  display: flex;\n  gap: 10px;\n  justify-content: space-between;\n  align-items: center;\n  font-weight: bold;\n  font-size: 15px;\n  color: #000;\n  padding-top: 20px;\n`;\n\nexport const InputContainer = styled.div`\n  position: relative;\n`;\n\nexport const FilterInput = styled.input`\n  text-indent: 30px;\n  width: 280px;\n  padding: 10px;\n  margin-bottom: 20px;\n  font-size: 16px;\n  border: none;\n  border: 2px solid #000;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    outline 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    transform: scale(1.01);\n    color: #000;\n    outline: 1px solid #000;\n    border-radius: 5px;\n  }\n  @keyframes btn-animation {\n    0% {\n      transform: scale(1.05);\n    }\n    20% {\n      transform: scale(1.1);\n    }\n    100% {\n      transform: scale(1.13);\n    }\n  }\n  :active {\n    animation: btn-animation 1s ease-out;\n  }\n`;\n","import Box from 'components/Box';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  FilterBox,\n  FilterInput,\n  InputContainer,\n  FilterIcon,\n} from './ContactFilter.styled';\nimport { setFilter, getFilter } from 'redux/filter/filterSlice';\n\nconst ContactFilter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n  return (\n    <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n      <FilterBox>\n        <InputContainer>\n          <FilterIcon />\n          <FilterInput\n            placeholder=\"Find contacts by name:\"\n            value={filter}\n            type=\"text\"\n            name=\"filter\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            onChange={e => dispatch(setFilter(e.target.value))}\n          />\n        </InputContainer>\n      </FilterBox>\n    </Box>\n  );\n};\n\nexport default ContactFilter;\n","import { useEffect } from 'react';\nimport {\n  ContactsContainer,\n  Glitch,\n  GlitchWrapper,\n  Keyframes,\n} from './Contacts.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectAllContacts, selectLoading } from 'redux/contacts/selectors';\nimport { fetchContacts } from '../../redux/contacts/operations';\nimport ContactForm from '../../components/ContactForm/ContactForm';\nimport ContactList from '../../components/ContactList';\nimport ContactFilter from '../../components/ContactFilter';\nimport Box from 'components/Box';\nimport Loader from 'components/Loader';\n\nconst Contacts = () => {\n  const contacts = useSelector(selectAllContacts);\n  const isLoading = useSelector(selectLoading);\n  const dispatch = useDispatch();\n  console.log(contacts);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Box as=\"section\">\n      <ContactsContainer>\n        <ContactForm />\n        <GlitchWrapper>\n          <Glitch data-glitch=\"Contacts:\">Contacts:</Glitch>\n          <Keyframes />\n        </GlitchWrapper>\n\n        <ContactFilter />\n        {isLoading && <Loader />}\n        {Boolean(contacts.length) && <ContactList />}\n      </ContactsContainer>\n    </Box>\n  );\n};\n\nexport default Contacts;\n"],"names":["ContactsContainer","styled","GlitchWrapper","Glitch","Keyframes","selectLoading","state","contacts","loading","selectAllContacts","PhoneIcon","BsFillTelephoneFill","UserIcon","FaUserAlt","FormBox","InputContainer","FormInput","Button","dispatch","useDispatch","useSelector","useState","name","setName","number","setNumber","onChangeInput","event","target","value","resetForm","reset","Box","display","justifyContent","flexDirection","gap","marginBottom","onSubmit","preventDefault","map","toLocaleLowerCase","some","item","Notify","addContact","placeholder","type","maxLength","required","onChange","pattern","title","List","DeleteIcon","AiFillDelete","Item","Text","TextItem","id","onClick","deleteContact","filter","getFilter","toLowerCaseFilter","contact","includes","getAddedContacts","FilterIcon","BsFillFilterSquareFill","FilterBox","FilterInput","alignItems","e","setFilter","isLoading","console","log","useEffect","fetchContacts","as","Loader","Boolean","length"],"sourceRoot":""}