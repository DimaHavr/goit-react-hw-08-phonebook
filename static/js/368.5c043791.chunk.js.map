{"version":3,"file":"static/js/368.5c043791.chunk.js","mappings":"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","sources":["components/Form/Form.styled.js","components/Form/Form.jsx","components/ContactList/ContactList.styled.jsx","components/ContactListItem/ContactListItem.styled.js","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/ContactFilter/ContactFilter.styled.js","components/ContactFilter/ContactFilter.jsx","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { BsFillTelephoneFill } from 'react-icons/bs';\nimport { FaUserAlt } from 'react-icons/fa';\n\nexport const PhoneIcon = styled(BsFillTelephoneFill)`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  left: 10px;\n  top: 50%;\n  transform: translateY(-50%);\n  background: transparent;\n  border: none;\n  z-index: 100;\n`;\n\nexport const UserIcon = styled(FaUserAlt)`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  left: 10px;\n  top: 50%;\n  transform: translateY(-50%);\n  background: transparent;\n  border: none;\n  z-index: 100;\n`;\n\nexport const FormBox = styled.form`\n  display: flex;\n  align-items: stretch;\n  gap: 10px;\n  padding: 10px;\n\n  @media screen and (max-width: 767px) {\n    flex-direction: column;\n    align-items: center;\n    gap: 20px;\n  }\n`;\n\nexport const InputContainer = styled.div`\n  position: relative;\n`;\n\nexport const FormInput = styled.input`\n  text-indent: 30px;\n  width: 280px;\n  padding: 10px;\n  font-size: 16px;\n  border: none;\n  border: 2px solid lightgray;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    transform: scale(1.01);\n    color: orangered;\n    border-color: orangered;\n  }\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-transform: uppercase;\n  text-decoration: none;\n  color: white;\n  background: linear-gradient(#1b1b1b, #111);\n  font-weight: 500;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n    color: orangered;\n  }\n\n  @media screen and (max-width: 767px) {\n    width: 100%;\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport {\n  FormBox,\n  FormInput,\n  Button,\n  PhoneIcon,\n  UserIcon,\n  InputContainer,\n} from './Form.styled';\nimport Box from '../Box';\nimport { addContact } from '../../redux/contacts/operation';\nimport { getContacts } from '../../redux/contacts/contactsSlice';\n\nconst Form = () => {\n  const dispatch = useDispatch();\n  const { contacts } = useSelector(getContacts);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const onChangeInput = event => {\n    const { name, value } = event.target;\n    if (name === 'name') {\n      setName(value);\n    } else {\n      setNumber(value);\n    }\n  };\n\n  const onSubmitForm = event => {\n    event.preventDefault();\n    if (contacts.find(contact => contact.name === name)) {\n      setName('');\n      Notify.failure(`${name} is already in contacts!`);\n    } else {\n      dispatch(addContact({ name, number }));\n      resetForm(event);\n      Notify.success(`${name} is added in contacts!`);\n    }\n  };\n\n  const resetForm = event => {\n    setName('');\n    setNumber('');\n    event.target.reset();\n  };\n\n  return (\n    <Box\n      display=\"flex\"\n      justifyContent=\"center\"\n      flexDirection=\"column\"\n      gap=\"20px\"\n      marginBottom=\"10px\"\n    >\n      <FormBox onSubmit={onSubmitForm}>\n        <InputContainer>\n          <UserIcon />\n          <FormInput\n            value={name}\n            placeholder=\"Name\"\n            type=\"text\"\n            name=\"name\"\n            maxLength=\"20\"\n            required\n            onChange={onChangeInput}\n          />\n        </InputContainer>\n        <InputContainer>\n          <PhoneIcon />\n          <FormInput\n            value={number}\n            placeholder=\"Phone number\"\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            maxLength=\"15\"\n            required\n            onChange={onChangeInput}\n          />\n        </InputContainer>\n        <Button type=\"submit\">Add Contact</Button>\n      </FormBox>\n    </Box>\n  );\n};\n\nexport default Form;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  list-style-type: none;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  gap: 20px;\n  margin-top: 20px;\n`;\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 20px;\n  border: 1px solid #000;\n  padding: 10px;\n  background-color: #4c779c4c;\n`;\nexport const Text = styled.p`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  align-items: flex-start;\n  font-weight: bold;\n  font-size: 15px;\n  text-transform: uppercase;\n  text-align: center;\n  padding: 10px;\n`;\nexport const TextItem = styled.span``;\n\nexport const Button = styled.button`\n  width: 80px;\n  height: 35px;\n  font-weight: bold;\n  font-size: 15px;\n  color: #000;\n  background-color: #fff;\n  border: none;\n  border-radius: 5px;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  :active {\n    transform: scale(1.1);\n  }\n`;\n","import styled from '@emotion/styled';\nimport { AiFillDelete } from 'react-icons/ai';\n\nexport const DeleteIcon = styled(AiFillDelete)`\n  width: 35px;\n  height: 35px;\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n    color: orangered;\n  }\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 20px;\n  border: 1px solid #000;\n  padding: 10px;\n  background-color: #4c779c4c;\n`;\nexport const Text = styled.p`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  align-items: flex-start;\n  font-weight: bold;\n  font-size: 15px;\n  text-transform: uppercase;\n  text-align: center;\n  padding: 10px;\n`;\nexport const TextItem = styled.span``;\n\nexport const Button = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n`;\n","import { useDispatch } from 'react-redux';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { deleteContact } from 'redux/contacts/operation';\nimport {\n  Item,\n  Button,\n  Text,\n  TextItem,\n  DeleteIcon,\n} from './ContactListItem.styled';\n\nconst ContactListItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <Item>\n      <Text>\n        {name}: <TextItem>{number}</TextItem>\n      </Text>\n      <Button\n        onClick={() => {\n          Notify.info('Сontact deleted!');\n          return dispatch(deleteContact(id));\n        }}\n        type=\"button\"\n      >\n        <DeleteIcon />\n      </Button>\n    </Item>\n  );\n};\n\nexport default ContactListItem;\n","import { useSelector } from 'react-redux';\nimport { getContacts } from '../../redux/contacts/contactsSlice';\nimport { getFilter } from '../../redux/filter/filterSlice';\nimport { List } from './ContactList.styled';\nimport ContactListItem from 'components/ContactListItem/ContactListItem';\n\nconst ContactList = () => {\n  const filter = useSelector(getFilter);\n  const { contacts } = useSelector(getContacts);\n\n  const getAddedContacts = () => {\n    const toLowerCaseFilter = filter.toLocaleLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(toLowerCaseFilter)\n    );\n  };\n\n  return (\n    <List>\n      {getAddedContacts().map(({ name, number, id }) => {\n        return <ContactListItem key={id} name={name} number={number} id={id} />;\n      })}\n    </List>\n  );\n};\n\nexport default ContactList;\n","import styled from '@emotion/styled';\n\nexport const FilterBox = styled.div`\n  display: flex;\n  gap: 10px;\n  justify-content: space-between;\n  align-items: center;\n  font-weight: bold;\n  font-size: 15px;\n  color: #000;\n  padding-top: 20px;\n`;\n\nexport const SubTitle = styled.h2`\n  font-weight: bold;\n  font-size: 25px;\n  text-transform: uppercase;\n  text-align: left;\n`;\n\nexport const FilterInput = styled.input`\n  width: 300px;\n  padding: 10px;\n  margin-bottom: 20px;\n  font-size: 16px;\n  border: none;\n  border: 2px solid lightgray;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    transform: scale(1.01);\n    color: orangered;\n    border-color: orangered;\n  }\n`;\n","import Box from 'components/Box';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FilterBox, FilterInput, SubTitle } from './ContactFilter.styled';\nimport { setFilter, getFilter } from 'redux/filter/filterSlice';\n\nconst ContactFilter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n  return (\n    <Box>\n      <SubTitle>Contacts:</SubTitle>\n      <FilterBox>\n        <FilterInput\n          placeholder=\"Find contacts by name:\"\n          value={filter}\n          type=\"text\"\n          name=\"filter\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={e => dispatch(setFilter(e.target.value))}\n        />\n      </FilterBox>\n    </Box>\n  );\n};\n\nexport default ContactFilter;\n","import styled from 'styled-components';\n\nexport const ContactsContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from '../../redux/contacts/contactsSlice';\nimport { fetchContacts } from '../../redux/contacts/operation';\nimport Form from '../../components/Form';\nimport ContactList from '../../components/ContactList';\nimport ContactFilter from '../../components/ContactFilter';\nimport Box from 'components/Box';\nimport { ContactsContainer } from './Contacts.styled';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const { contacts } = useSelector(getContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Box as=\"section\">\n      <ContactsContainer>\n        <Form />\n        {contacts.length > 0 && (\n          <>\n            <ContactFilter />\n            <ContactList />\n          </>\n        )}\n      </ContactsContainer>\n    </Box>\n  );\n};\n\nexport default Contacts;\n"],"names":["PhoneIcon","styled","BsFillTelephoneFill","UserIcon","FaUserAlt","FormBox","InputContainer","FormInput","Button","dispatch","useDispatch","contacts","useSelector","getContacts","useState","name","setName","number","setNumber","onChangeInput","event","target","value","resetForm","reset","Box","display","justifyContent","flexDirection","gap","marginBottom","onSubmit","preventDefault","find","contact","Notify","addContact","placeholder","type","maxLength","required","onChange","pattern","title","List","DeleteIcon","AiFillDelete","Item","Text","TextItem","id","onClick","deleteContact","filter","getFilter","toLowerCaseFilter","toLocaleLowerCase","includes","getAddedContacts","map","FilterBox","SubTitle","FilterInput","e","setFilter","ContactsContainer","useEffect","fetchContacts","as","length"],"sourceRoot":""}